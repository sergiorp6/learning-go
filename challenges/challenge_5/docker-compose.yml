version: '3.9'

services:
  producer:
    build: ./producer
    environment:
      DBHOST: database
      DBPORT: 5432
      DBUSER: postgres
      DBPASSWORD: 123123
      DBNAME: test
      KAFKA_BROKER: broker:9092
      KAFKA_TOPIC: topic.test.1
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_started
      broker:
        condition: service_healthy

  consumer: #Add more consumers with docker-compose scale consumer=4
    build: ./consumer
    environment:
      KAFKA_BROKER: broker:9092
      KAFKA_TOPIC: topic.test.1
      KAFKA_CONSUMER_GROUP: test-cg
    depends_on:
      producer:
        condition: service_started

  database:
    image: postgres:14.5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123123
      POSTGRES_DB: test

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_LOG_RETENTION_MS: 20000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 2000
      KAFKA_MIN_INSYNC_REPLICAS: '1'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper

  broker-ui:
    image: provectuslabs/kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
    ports:
      - "8081:8080"
    depends_on:
      - broker
